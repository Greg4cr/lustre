node NonInlined(
  in_1 : int;
  in_2 : bool;
  in_3 : bool;
  in_4 : bool
) returns (
  out : bool
);
var
  expr1 : int;
  expr2 : bool;
  expr3 : bool;
  expr4 : bool;
  in_1_COMB_USED_BY_expr1 : bool;
  in_1_COMB_USED_BY_expr1 : bool;
  in_1_COMB_USED_BY_expr1 : bool;
  expr1_COMB_USED_BY_expr2 : bool;
  expr2_COMB_USED_BY_expr4 : bool;
  expr2_COMB_USED_BY_out : bool;
let
  --%MAIN;
  expr1 = (if (in_1 <= 10) then (in_1 + 1) else (in_1 - 10));

  expr2 = ((expr1 < 3) and (in_2 or in_3));

  expr3 = (((expr2 and (not in_3)) or ((not expr2) and in_3)) or (not (in_2 and in_4)));

  expr4 = (false -> (pre expr2));

  out = (expr3 -> (pre expr2));

  in_1_COMB_USED_BY_expr1 = true;

  in_1_COMB_USED_BY_expr1 = ((in_1 <= 10) and true);

  in_1_COMB_USED_BY_expr1 = ((not (in_1 <= 10)) and true);

  expr1_COMB_USED_BY_expr2 = (in_2 or in_3);

  expr2_COMB_USED_BY_expr4 = false;

  expr2_COMB_USED_BY_out = false;

  --%PROPERTY in_1_COMB_USED_BY_expr1;
  --%PROPERTY in_1_COMB_USED_BY_expr1;
  --%PROPERTY in_1_COMB_USED_BY_expr1;
  --%PROPERTY expr1_COMB_USED_BY_expr2;
  --%PROPERTY expr2_COMB_USED_BY_expr4;
  --%PROPERTY expr2_COMB_USED_BY_out;

tel;
