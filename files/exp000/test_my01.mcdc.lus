node NonInlined(
  in_1 : int;
  in_2 : bool;
  in_3 : bool;
  in_4 : bool
) returns (
  out : bool
);
var
  expr1 : int;
  expr2 : bool;
  expr3 : bool;
  expr4 : bool;
  ArithExpr_0_TRUE_AT_expr1_MCDC_TRUE_0 : bool;
  ArithExpr_0_FALSE_AT_expr1_MCDC_FALSE_1 : bool;
  ArithExpr_1_TRUE_AT_expr2_MCDC_TRUE_2 : bool;
  ArithExpr_1_FALSE_AT_expr2_MCDC_FALSE_3 : bool;
  in_2_TRUE_AT_expr2_MCDC_TRUE_4 : bool;
  in_2_FALSE_AT_expr2_MCDC_FALSE_5 : bool;
  in_3_TRUE_AT_expr2_MCDC_TRUE_6 : bool;
  in_3_FALSE_AT_expr2_MCDC_FALSE_7 : bool;
  expr2_TRUE_AT_expr3_MCDC_TRUE_8 : bool;
  expr2_FALSE_AT_expr3_MCDC_FALSE_9 : bool;
  in_3_TRUE_AT_expr3_MCDC_FALSE_10 : bool;
  in_3_FALSE_AT_expr3_MCDC_TRUE_11 : bool;
  expr2_TRUE_AT_expr3_MCDC_FALSE_12 : bool;
  expr2_FALSE_AT_expr3_MCDC_TRUE_13 : bool;
  in_3_TRUE_AT_expr3_MCDC_TRUE_14 : bool;
  in_3_FALSE_AT_expr3_MCDC_FALSE_15 : bool;
  in_2_TRUE_AT_expr3_MCDC_FALSE_16 : bool;
  in_2_FALSE_AT_expr3_MCDC_TRUE_17 : bool;
  in_4_TRUE_AT_expr3_MCDC_FALSE_18 : bool;
  in_4_FALSE_AT_expr3_MCDC_TRUE_19 : bool;
  expr2_TRUE_AT_expr4_MCDC_TRUE_20 : bool;
  expr2_FALSE_AT_expr4_MCDC_FALSE_21 : bool;
  expr3_TRUE_AT_out_MCDC_TRUE_22 : bool;
  expr3_FALSE_AT_out_MCDC_FALSE_23 : bool;
  expr2_TRUE_AT_out_MCDC_TRUE_24 : bool;
  expr2_FALSE_AT_out_MCDC_FALSE_25 : bool;
let
  --%MAIN;
  expr1 = (if (in_1 <= 10) then (in_1 + 1) else (in_1 - 10));

  expr2 = ((expr1 < 3) and (in_2 or in_3));

  expr3 = (((expr2 and (not in_3)) or ((not expr2) and in_3)) or (not (in_2 and in_4)));

  expr4 = (false -> (pre expr2));

  out = (expr3 -> (pre expr2));

  ArithExpr_0_TRUE_AT_expr1_MCDC_TRUE_0 = (not (in_1 <= 10));

  ArithExpr_0_FALSE_AT_expr1_MCDC_FALSE_1 = (not (not (in_1 <= 10)));

  ArithExpr_1_TRUE_AT_expr2_MCDC_TRUE_2 = (not ((expr1 < 3) and (in_2 or in_3)));

  ArithExpr_1_FALSE_AT_expr2_MCDC_FALSE_3 = (not ((not (expr1 < 3)) and (in_2 or in_3)));

  in_2_TRUE_AT_expr2_MCDC_TRUE_4 = (not ((expr1 < 3) and (in_2 and (not in_3))));

  in_2_FALSE_AT_expr2_MCDC_FALSE_5 = (not ((expr1 < 3) and ((not in_2) and (not in_3))));

  in_3_TRUE_AT_expr2_MCDC_TRUE_6 = (not ((expr1 < 3) and ((not in_2) and in_3)));

  in_3_FALSE_AT_expr2_MCDC_FALSE_7 = (not ((expr1 < 3) and ((not in_2) and (not in_3))));

  expr2_TRUE_AT_expr3_MCDC_TRUE_8 = (not (((expr2 and (not in_3)) and (not ((not expr2) and in_3))) and (not (not (in_2 and in_4)))));

  expr2_FALSE_AT_expr3_MCDC_FALSE_9 = (not ((((not expr2) and (not in_3)) and (not ((not expr2) and in_3))) and (not (not (in_2 and in_4)))));

  in_3_TRUE_AT_expr3_MCDC_FALSE_10 = (not (((expr2 and in_3) and (not ((not expr2) and in_3))) and (not (not (in_2 and in_4)))));

  in_3_FALSE_AT_expr3_MCDC_TRUE_11 = (not (((expr2 and (not in_3)) and (not ((not expr2) and in_3))) and (not (not (in_2 and in_4)))));

  expr2_TRUE_AT_expr3_MCDC_FALSE_12 = (not (((not (expr2 and (not in_3))) and (expr2 and in_3)) and (not (not (in_2 and in_4)))));

  expr2_FALSE_AT_expr3_MCDC_TRUE_13 = (not (((not (expr2 and (not in_3))) and ((not expr2) and in_3)) and (not (not (in_2 and in_4)))));

  in_3_TRUE_AT_expr3_MCDC_TRUE_14 = (not (((not (expr2 and (not in_3))) and ((not expr2) and in_3)) and (not (not (in_2 and in_4)))));

  in_3_FALSE_AT_expr3_MCDC_FALSE_15 = (not (((not (expr2 and (not in_3))) and ((not expr2) and (not in_3))) and (not (not (in_2 and in_4)))));

  in_2_TRUE_AT_expr3_MCDC_FALSE_16 = (not ((not ((expr2 and (not in_3)) or ((not expr2) and in_3))) and (in_2 and in_4)));

  in_2_FALSE_AT_expr3_MCDC_TRUE_17 = (not ((not ((expr2 and (not in_3)) or ((not expr2) and in_3))) and ((not in_2) and in_4)));

  in_4_TRUE_AT_expr3_MCDC_FALSE_18 = (not ((not ((expr2 and (not in_3)) or ((not expr2) and in_3))) and (in_2 and in_4)));

  in_4_FALSE_AT_expr3_MCDC_TRUE_19 = (not ((not ((expr2 and (not in_3)) or ((not expr2) and in_3))) and (in_2 and (not in_4))));

  expr2_TRUE_AT_expr4_MCDC_TRUE_20 = (not (false -> (pre expr2)));

  expr2_FALSE_AT_expr4_MCDC_FALSE_21 = (not (false -> (pre (not expr2))));

  expr3_TRUE_AT_out_MCDC_TRUE_22 = (not (expr3 -> false));

  expr3_FALSE_AT_out_MCDC_FALSE_23 = (not ((not expr3) -> false));

  expr2_TRUE_AT_out_MCDC_TRUE_24 = (not (false -> (pre expr2)));

  expr2_FALSE_AT_out_MCDC_FALSE_25 = (not (false -> (pre (not expr2))));

  --%PROPERTY ArithExpr_0_TRUE_AT_expr1_MCDC_TRUE_0;
  --%PROPERTY ArithExpr_0_FALSE_AT_expr1_MCDC_FALSE_1;
  --%PROPERTY ArithExpr_1_TRUE_AT_expr2_MCDC_TRUE_2;
  --%PROPERTY ArithExpr_1_FALSE_AT_expr2_MCDC_FALSE_3;
  --%PROPERTY in_2_TRUE_AT_expr2_MCDC_TRUE_4;
  --%PROPERTY in_2_FALSE_AT_expr2_MCDC_FALSE_5;
  --%PROPERTY in_3_TRUE_AT_expr2_MCDC_TRUE_6;
  --%PROPERTY in_3_FALSE_AT_expr2_MCDC_FALSE_7;
  --%PROPERTY expr2_TRUE_AT_expr3_MCDC_TRUE_8;
  --%PROPERTY expr2_FALSE_AT_expr3_MCDC_FALSE_9;
  --%PROPERTY in_3_TRUE_AT_expr3_MCDC_FALSE_10;
  --%PROPERTY in_3_FALSE_AT_expr3_MCDC_TRUE_11;
  --%PROPERTY expr2_TRUE_AT_expr3_MCDC_FALSE_12;
  --%PROPERTY expr2_FALSE_AT_expr3_MCDC_TRUE_13;
  --%PROPERTY in_3_TRUE_AT_expr3_MCDC_TRUE_14;
  --%PROPERTY in_3_FALSE_AT_expr3_MCDC_FALSE_15;
  --%PROPERTY in_2_TRUE_AT_expr3_MCDC_FALSE_16;
  --%PROPERTY in_2_FALSE_AT_expr3_MCDC_TRUE_17;
  --%PROPERTY in_4_TRUE_AT_expr3_MCDC_FALSE_18;
  --%PROPERTY in_4_FALSE_AT_expr3_MCDC_TRUE_19;
  --%PROPERTY expr2_TRUE_AT_expr4_MCDC_TRUE_20;
  --%PROPERTY expr2_FALSE_AT_expr4_MCDC_FALSE_21;
  --%PROPERTY expr3_TRUE_AT_out_MCDC_TRUE_22;
  --%PROPERTY expr3_FALSE_AT_out_MCDC_FALSE_23;
  --%PROPERTY expr2_TRUE_AT_out_MCDC_TRUE_24;
  --%PROPERTY expr2_FALSE_AT_out_MCDC_FALSE_25;

tel;
