node top(
  x : bool
) returns (
  OK : bool
);
var
  gry_ite : int;
  V13_b : bool;
  V14_d : bool;
  V40_a : bool;
  V41_b : bool;
  V51_time : int;
  rlt__PRE3 : bool;
  rlt__PRE2 : bool;
  rlt__PRE1 : int;
  rlt__PRE : int;
  rlt__PRE_COMB_USED_BY_gry_ite : bool;
  rlt__PRE1_COMB_USED_BY_gry_ite : bool;
  V51_time_COMB_USED_BY_V14_d : bool;
  rlt__PRE2_COMB_USED_BY_V40_a : bool;
  rlt__PRE3_COMB_USED_BY_V41_b : bool;
  gry_ite_COMB_USED_BY_V51_time : bool;
  V40_a_COMB_USED_BY_rlt__PRE3 : bool;
  V41_b_COMB_USED_BY_rlt__PRE2 : bool;
  V51_time_COMB_USED_BY_rlt__PRE1 : bool;
  V51_time_COMB_USED_BY_rlt__PRE : bool;
  token_first : bool;
  token_next : bool;
  token : bool;
let
  --%MAIN;
  gry_ite = (if (rlt__PRE = 3) then 0 else (rlt__PRE1 + 1));

  OK = ((V13_b and V14_d) or ((not V13_b) and (not V14_d)));

  V13_b = (V40_a and V41_b);

  V14_d = (V51_time = 2);

  V40_a = (false -> (not rlt__PRE2));

  V41_b = (false -> rlt__PRE3);

  V51_time = (0 -> gry_ite);

  rlt__PRE3 = (false -> (pre V40_a));

  rlt__PRE2 = (false -> (pre V41_b));

  rlt__PRE1 = (0 -> (pre V51_time));

  rlt__PRE = (0 -> (pre V51_time));

  rlt__PRE_COMB_USED_BY_gry_ite = true;

  rlt__PRE1_COMB_USED_BY_gry_ite = ((not (rlt__PRE = 3)) and true);

  V51_time_COMB_USED_BY_V14_d = true;

  rlt__PRE2_COMB_USED_BY_V40_a = (false -> true);

  rlt__PRE3_COMB_USED_BY_V41_b = (false -> true);

  gry_ite_COMB_USED_BY_V51_time = (false -> true);

  V40_a_COMB_USED_BY_rlt__PRE3 = false;

  V41_b_COMB_USED_BY_rlt__PRE2 = false;

  V51_time_COMB_USED_BY_rlt__PRE1 = false;

  V51_time_COMB_USED_BY_rlt__PRE = false;

  token_first = (if token_init then token_nondet else TOKEN_INIT_STATE);

  token_next = (if ((pre token) = TOKEN_INIT_STATE) then token_first else (if ((pre token) = TOKEN_ERROR_STATE) then TOKEN_ERROR_STATE else (if ((pre token) = TOKEN_OUTPUT_STATE) then TOKEN_OUTPUT_STATE else (if ((pre token) = TOKEN_D1) then (if rlt__PRE_COMB_OBSERVED then TOKEN_OUTPUT_STATE else (if ((token_nondet = TOKEN_D2) and rlt__PRE_SEQ_USED_BY_rlt__PRE1) then TOKEN_D2 else TOKEN_ERROR_STATE)) else (if ((pre token) = TOKEN_D2) then (if rlt__PRE1_COMB_OBSERVED then TOKEN_OUTPUT_STATE else (if ((token_nondet = TOKEN_D2) and rlt__PRE1_SEQ_USED_BY_rlt__PRE1) then TOKEN_D2 else TOKEN_ERROR_STATE)) else (if ((pre token) = TOKEN_D3) then (if rlt__PRE2_COMB_OBSERVED then TOKEN_OUTPUT_STATE else (if ((token_nondet = TOKEN_D4) and rlt__PRE2_SEQ_USED_BY_rlt__PRE3) then TOKEN_D4 else TOKEN_ERROR_STATE)) else (if ((pre token) = TOKEN_D4) then (if rlt__PRE3_COMB_OBSERVED then TOKEN_OUTPUT_STATE else (if ((token_nondet = TOKEN_D3) and rlt__PRE3_SEQ_USED_BY_rlt__PRE2) then TOKEN_D3 else TOKEN_ERROR_STATE)) else TOKEN_ERROR_STATE)))))));

  token = (token_first -> token_next);

  --%PROPERTY rlt__PRE_COMB_USED_BY_gry_ite;
  --%PROPERTY rlt__PRE1_COMB_USED_BY_gry_ite;
  --%PROPERTY V51_time_COMB_USED_BY_V14_d;
  --%PROPERTY rlt__PRE2_COMB_USED_BY_V40_a;
  --%PROPERTY rlt__PRE3_COMB_USED_BY_V41_b;
  --%PROPERTY gry_ite_COMB_USED_BY_V51_time;
  --%PROPERTY V40_a_COMB_USED_BY_rlt__PRE3;
  --%PROPERTY V41_b_COMB_USED_BY_rlt__PRE2;
  --%PROPERTY V51_time_COMB_USED_BY_rlt__PRE1;
  --%PROPERTY V51_time_COMB_USED_BY_rlt__PRE;
  --%PROPERTY token_first;
  --%PROPERTY token_next;
  --%PROPERTY token;

tel;
